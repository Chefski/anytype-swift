# Build action. Just build an app for an provided platform.

name: Build action

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  # push:
  #   branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macOS-latest
    
    # Define a matrix of values. It produces cartesian product of values for which we would run this job.
    strategy:
      matrix:
        scheme:
          - AnyType
        destination: ['']
        sdk: ['iphoneos']
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install SSH key for access to repository.
      - name: Install SSH key for access to repository.
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      # Install xcpretty.
      - name: Install xcpretty
        run: gem install xcpretty

      # Select Xcode
      - name: Select Xcode
        run: sh ./Scripts/ci_select_xcode.sh

      # Import certificate
      - name: Import certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.DEVELOPER_CERTIFICATE_BASE64 }}
          p12-password: ${{ secrets.DEVELOPER_CERTIFICATE_PASSWORD }}

      # Download provisioning profiles
      # Look at this file for available options for profile-type
      # https://github.com/Apple-Actions/download-provisioning-profiles/blob/master/action.yml
      - name: Download provisioning profiles
        id: provisioning
        uses: apple-actions/download-provisioning-profiles@v1
        with: 
          bundle-id: 'com.anytypeio.anytype'
          profile-type: 'IOS_APP_DEVELOPMENT'
          issuer-id: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}

      # Download Middleware
      - name: Download Middleware
        run: ruby ./Scripts/middleware.rb --token ${{ secrets.ANYTYPE_MIDDLEWARE_ACCESS_TOKEN }}

      # Change git config to force use ssh instead of https.
      - name: Change git config to force use ssh instead of https
        run: git config --global url.ssh://git@github.com/.insteadOf https://github.com/

      # Xcodebuild action
      - name: Xcodebuild action
        run: xcodebuild build -project ./Anytype.xcodeproj -scheme "${{ matrix.scheme }}" -sdk "${{ matrix.sdk }}" -configuration Release -usePackageSupportBuiltinSCM | xcpretty && exit ${PIPESTATUS[0]}