import SwiftUI

{% if catalogs %}
{% set enumName %}{{param.enumName|default:"Asset"}}{% endset %}
{% set arResourceGroupType %}{{param.arResourceGroupTypeName|default:"ARResourceGroupAsset"}}{% endset %}
{% set colorType %}{{param.colorTypeName|default:"ColorAsset"}}{% endset %}
{% set dataType %}{{param.dataTypeName|default:"DataAsset"}}{% endset %}
{% set imageType %}{{param.imageTypeName|default:"ImageAsset"}}{% endset %}
{% set symbolType %}{{param.symbolTypeName|default:"SymbolAsset"}}{% endset %}
{% set forceNamespaces %}{{param.forceProvidesNamespaces|default:"false"}}{% endset %}
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% macro enumBlock assets %}
  {% call casesBlock assets %}
{% endmacro %}
{% macro casesBlock assets %}

  {% for asset in assets %}
  {% if asset.type == "color" %}
  {{accessModifier}} static let {{asset.name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} = Color(asset: Asset.{{asset.value|replace:'/','.'}})
  {% elif asset.items and catalName == "SystemColors" %}
  // MARK: - {{asset.name}}
  {% call casesBlock asset.items %}
  {% elif asset.items %}
  enum {{asset.name|swiftIdentifier:"pretty"|escapeReservedKeywords}}: ComponentColor {
  {% filter indent:2 %}
  typealias T = Color
  {% call casesBlock asset.items %}{% endfilter %}
  }
  {% endif %}
  {% endfor %}
{% endmacro %}
extension Color {
  {% for catalog in catalogs %}
  {% set catalName %}{{catalog.name}}{% endset %}
  {% filter indent:2 %}{% call enumBlock catalog.assets %}{% endfilter %}
  {% endfor %}
}
{% endif %}